{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/LoginPage.jsx","components/SignupPage.jsx","components/App.jsx","index.js"],"names":["Header","props","isLogin","className","onClick","onLogout","Footer","year","Date","getFullYear","Note","name","description","postId","id","fetch","method","headers","Authorization","token","then","res","status","Error","json","resData","loadPost","catch","err","CreateArea","useState","note","setNote","handleChange","event","target","value","prevNote","onChange","placeholder","rows","preventDefault","body","JSON","stringify","console","log","LoginPage","email","password","account","setAccount","inputChangeHandler","prevAccount","onSubmit","e","onLogin","type","SingupPage","onSignup","App","isAuth","userId","error","msg","setIsLogin","posts","setPosts","setAutoLogout","milliseconds","setTimeout","logoutHandler","localStorage","removeItem","loadPosts","useEffect","getItem","expiryDate","remainingMilliseconds","getTime","authData","user","_id","setItem","toISOString","SignupPage","map","postItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a12292c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <h1>Keeper\r\n      {props.isLogin ?\r\n          <button\r\n            className=\"header-item\" onClick={props.onLogout}>Logout</button> :\r\n          <button\r\n            className=\"header-item\" onClick={props.onLogout}>Login</button>}\r\n      </h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright â“’ {year}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\nfunction Note(props) {\r\n  function deletePostHandler(postId) {\r\n    fetch('https://authapi-264513.appspot.com/posts/' + postId, {\r\n    // fetch('http://localhost:8080/posts/' + postId, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: 'Bearer ' + props.token\r\n      }\r\n    }).then((res) => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        throw new Error('Deleting a post failed!')\r\n      }\r\n      return res.json()\r\n    }).then(resData => {\r\n      props.loadPost()\r\n    })\r\n      .catch((err) => {\r\n\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.name}</h1>\r\n      <p>{props.description}</p>\r\n      <button onClick={() => deletePostHandler(props.id)}> <DeleteIcon /></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from 'react';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [note, setNote] = useState({\r\n        name: \"\",\r\n        description: \"\"\r\n    })\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target\r\n\r\n        setNote(prevNote => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    function postHandler(event) {\r\n        event.preventDefault()\r\n        const body = JSON.stringify({\r\n            name: note.name,\r\n            description: note.description\r\n        })\r\n        console.log(body)\r\n        fetch('https://authapi-264513.appspot.com/posts', {\r\n        // fetch('http://localhost:8080/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + props.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: note.name,\r\n                description: note.description\r\n            })\r\n        }).then((res) => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Creating a post failed!')\r\n            }\r\n            props.loadPost()\r\n            return res.json()\r\n        }).then(resData => {\r\n            setNote({\r\n                name: '',\r\n                description: ''\r\n            })\r\n        }).catch((err) => {\r\n            setNote({\r\n                name: '',\r\n                description: ''\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    value={note.name}\r\n                    placeholder=\"Post name\"\r\n                />\r\n                <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={note.description}\r\n                    placeholder=\"Take a description...\"\r\n                    rows=\"3\"\r\n                />\r\n                <button onClick={postHandler}>Add</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArea","import React, { useState } from 'react'\r\n\r\nfunction LoginPage(props) {\r\n    const [account, setAccount] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    function inputChangeHandler(event) {\r\n        const { name, value } = event.target\r\n\r\n        setAccount(prevAccount => {\r\n            return {\r\n                ...prevAccount,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => {\r\n                props.onLogin(e, {\r\n                    email: account.email,\r\n                    password: account.email\r\n                })\r\n            }}>\r\n                <h1 className=\"h1-items\">Login</h1>\r\n                <hr/>\r\n                <label>email</label>\r\n                <input name=\"email\" onChange={inputChangeHandler} value={\r\n                    account.email} placeholder=\"è¼¸å…¥ email\" />\r\n                <label>password</label>\r\n                <input name=\"password\" onChange={inputChangeHandler} value={\r\n                    account.password} placeholder=\"è¼¸å…¥ password\" />\r\n\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginPage","import React, { useState } from 'react';\r\n\r\nfunction SingupPage(props) {\r\n    const [account, setAccount] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    function inputChangeHandler(event) {\r\n        const { name, value } = event.target\r\n\r\n        setAccount(prevAccount => {\r\n            return {\r\n                ...prevAccount,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    function signUpHandler(){\r\n        setAccount({\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => {\r\n                props.onSignup(e, {\r\n                    name: account.name,\r\n                    email: account.email,\r\n                    password: account.email\r\n                })\r\n            }}>\r\n                <h1 className=\"h1-items\">SignUp</h1>\r\n                \r\n                <hr />\r\n                <label>name</label>\r\n                <input name=\"name\" onChange={inputChangeHandler} value={\r\n                    account.name} placeholder=\"è¼¸å…¥ name\" />\r\n\r\n                <label>email</label>\r\n                <input name=\"email\" onChange={inputChangeHandler} value={\r\n                    account.email} placeholder=\"è¼¸å…¥ email\" />\r\n                <label>password</label>\r\n                <input name=\"password\" onChange={inputChangeHandler} value={\r\n                    account.password} placeholder=\"è¼¸å…¥ password\" />\r\n\r\n                <button type=\"submit\" >Signup</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingupPage","import React, { useState, useEffect } from 'react'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport Note from './Note'\r\nimport CreateArea from './CreateArea'\r\nimport LoginPage from './LoginPage'\r\nimport SignupPage from './SignupPage'\r\n\r\nfunction App() {\r\n    const [isLogin, setIsLogin] = useState({\r\n        isAuth: false,\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n        msg: \"\"\r\n    })\r\n\r\n    const [posts, setPosts] = useState({\r\n        posts: [],\r\n        error: ''\r\n    })\r\n    useEffect(() => {\r\n\r\n        const token = localStorage.getItem('token');\r\n        const expiryDate = localStorage.getItem('expiryDate')\r\n        if (!token || !expiryDate) {\r\n            return\r\n        }\r\n        if (new Date(expiryDate) <= new Date()) {\r\n            logoutHandler()\r\n            return\r\n        }\r\n        const userId = localStorage.getItem('userId');\r\n        const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\r\n        setIsLogin({\r\n            isAuth: true,\r\n            token: token,\r\n            userId: userId\r\n        })\r\n        loadPosts()\r\n        setAutoLogout(remainingMilliseconds)\r\n    }, []);\r\n\r\n    function setAutoLogout(milliseconds) {\r\n        setTimeout(() => {\r\n            logoutHandler();\r\n        }, milliseconds);\r\n    };\r\n\r\n    function logoutHandler() {\r\n        setIsLogin({\r\n            isAuth: false,\r\n            token: null\r\n        })\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expiryDate');\r\n        localStorage.removeItem('userId');\r\n    };\r\n\r\n    function loginHandler(event, authData) {\r\n        event.preventDefault()\r\n        loadPosts()\r\n        fetch('https://authapi-264513.appspot.com/auth/login', {\r\n        // fetch('http://localhost:8080/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: authData.email,\r\n                password: authData.password\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.status === 422) {\r\n                    throw new Error('Validation failed')\r\n                }\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Could not authenticate you')\r\n                }\r\n                return res.json()\r\n            }).then(resData => {\r\n                setIsLogin({\r\n                    isAuth: true,\r\n                    token: resData.token,\r\n                    userId: resData.user._id\r\n                })\r\n\r\n                localStorage.setItem('token', resData.token)\r\n                localStorage.setItem('userId', resData.user._id)\r\n\r\n                const remainingMilliseconds = 60 * 60 * 1000;\r\n                const expiryDate = new Date(\r\n                    new Date().getTime() + remainingMilliseconds\r\n                );\r\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n                setAutoLogout(remainingMilliseconds);\r\n\r\n            }).catch((err) => {\r\n                setIsLogin({ isAuth: false })\r\n            });\r\n    }\r\n\r\n    function signupHandler(event, authData) {\r\n        event.preventDefault()\r\n        fetch('https://authapi-264513.appspot.com/auth/signup', {\r\n        // fetch('http://localhost:8080/auth/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: authData.name,\r\n                email: authData.email,\r\n                password: authData.password\r\n            })\r\n        }).then(res => {\r\n            if (res.status === 422) {\r\n                throw new Error(\r\n                    \"Validation failed. Make sure the email address isn't used yet!\"\r\n                );\r\n            }\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                console.log('Error!');\r\n                throw new Error('Creating a user failed!');\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            setIsLogin({\r\n                msg: \"SignUp Success\"\r\n            })\r\n        }).catch(err => {\r\n            setIsLogin({ \r\n                msg: \"Error\"\r\n            })\r\n        });\r\n    }\r\n\r\n    function loadPosts() {\r\n        fetch('http://https://authapi-264513.appspot.com')\r\n        // fetch('http://localhost:8080')\r\n            .then((res) => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch posts')\r\n                }\r\n                return res.json()\r\n            }).then(resData => {\r\n                console.log(\"resData =\" + resData.posts)\r\n                setPosts({\r\n                    posts: resData.posts\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log('err=' + err)\r\n                setPosts({\r\n                    error: err\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Header isLogin={isLogin.isAuth} onLogout={logoutHandler} />\r\n        <p>{isLogin.msg}</p>\r\n        {isLogin.isAuth && <CreateArea loadPost={loadPosts} token={isLogin.token} />}\r\n        {!isLogin.isAuth &&\r\n            (\r\n                <div>\r\n                    <LoginPage onLogin={loginHandler} />\r\n                    <SignupPage onSignup={signupHandler} />\r\n                </div>\r\n            )\r\n        }\r\n        {posts.posts.map((postItem) => (\r\n            <Note\r\n                loadPost={loadPosts}\r\n                key={postItem._id}\r\n                id={postItem._id}\r\n                name={postItem.name}\r\n                description={postItem.description}\r\n                token={isLogin.token}\r\n            />\r\n        ))}\r\n        <Footer />\r\n    </div>\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from '../src/components/App'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}